// Copyright 2019 The Chromium OS Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

syntax = "proto3";

package testplans;

option go_package = "protos";

import "lucicfg/external/crostesting/proto/config/target_test_requirements_config.proto";

// A Chromium build image, such as "kevin".
message Image {
  // The build image's name.
  string image_name = 1;
}

// The files that should be tested in a test plan.
message BuildPayload {
  // We expect to use either version or images, but not both.
  // We'll drop the unnecessary one once we've sorted out details
  // with the Skylab team.
  string version = 1;
  repeated Image image = 2;
}

// Hardware or VM requirements for running a test plan.
message SchedulingRequirements {
  oneof target_type {
    // A CrOS reference design that may represent many different build targets.
    // This corresponds to values of `mosys platform family`, such as
    // "Google_Coral".
    string reference_design = 1;
    // Any CrOS build target, such as "kevin". This should correspond to a
    // Portage overlay.
    string build_target = 2;
  }
}

// Metadata for executing one test configuration for one reference design or
// build target.
message TestPlan {
  oneof TestCfg {
    crostesting.GceTestCfg gce_test_cfg = 1;
    crostesting.HwTestCfg hw_test_cfg = 2;
    crostesting.MoblabVmTestCfg moblab_vm_test_cfg = 3;
    crostesting.TastVmTestCfg tast_vm_test_cfg = 4;
    crostesting.VmTestCfg vm_test_cfg = 5;
  }

  // The scheduling requirements for this test plan.
  SchedulingRequirements scheduling_requirements = 6;
  // The build files provided to run this test plan.
  BuildPayload build_payload = 7;
}

// A full set of test plans for a given CQ run.
message CombinedTestPlan {
  // The test plans needed to satisfy this CQ run.
  repeated TestPlan test_plan = 1;
}

